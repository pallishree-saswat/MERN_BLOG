[{"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\index.js":"1","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\reportWebVitals.js":"2","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\App.js":"3","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\store.js":"4","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Header.js":"5","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\LoginScreen.js":"6","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\RegisterScreen.js":"7","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\SinglePost.js":"8","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\HomeScreen.js":"9","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\reducers\\postReducer.js":"10","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\AddPostScreen.js":"11","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\reducers\\userReducer.js":"12","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\ProfileScreen.js":"13","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\FormContainer.js":"14","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Message.js":"15","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Loader.js":"16","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Post.js":"17","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\PostItem.js":"18","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Mypost.js":"19","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\actions\\postAction.js":"20","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\actions\\userAction.js":"21","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\constants\\postConstants.js":"22","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\constants\\userConstants.js":"23","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\EditPostScreen.js":"24","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\UserProfile.js":"25","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Userpost.js":"26","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\CommentForm.js":"27","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\AllComments.js":"28","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\utils\\setAuth.js":"29","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\SearchBox.js":"30"},{"size":638,"mtime":1607164565784,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1354,"mtime":1607502915116,"results":"34","hashOfConfig":"32"},{"size":1468,"mtime":1607340304415,"results":"35","hashOfConfig":"32"},{"size":2196,"mtime":1607502019957,"results":"36","hashOfConfig":"32"},{"size":2168,"mtime":1607326813003,"results":"37","hashOfConfig":"32"},{"size":3215,"mtime":1607165952891,"results":"38","hashOfConfig":"32"},{"size":1896,"mtime":1607360442489,"results":"39","hashOfConfig":"32"},{"size":1467,"mtime":1607572595146,"results":"40","hashOfConfig":"32"},{"size":4710,"mtime":1607349341842,"results":"41","hashOfConfig":"32"},{"size":3407,"mtime":1607498082187,"results":"42","hashOfConfig":"32"},{"size":4217,"mtime":1607313742690,"results":"43","hashOfConfig":"32"},{"size":4533,"mtime":1607361980794,"results":"44","hashOfConfig":"32"},{"size":345,"mtime":1607163555214,"results":"45","hashOfConfig":"32"},{"size":248,"mtime":1607163633636,"results":"46","hashOfConfig":"32"},{"size":403,"mtime":1607163606918,"results":"47","hashOfConfig":"32"},{"size":1097,"mtime":1607572030953,"results":"48","hashOfConfig":"32"},{"size":1057,"mtime":1607500256342,"results":"49","hashOfConfig":"32"},{"size":1877,"mtime":1607500077495,"results":"50","hashOfConfig":"32"},{"size":6506,"mtime":1607502330794,"results":"51","hashOfConfig":"32"},{"size":7247,"mtime":1607318957891,"results":"52","hashOfConfig":"32"},{"size":1664,"mtime":1607347809522,"results":"53","hashOfConfig":"32"},{"size":1506,"mtime":1607164367298,"results":"54","hashOfConfig":"32"},{"size":3969,"mtime":1607500700567,"results":"55","hashOfConfig":"32"},{"size":1331,"mtime":1607420932963,"results":"56","hashOfConfig":"32"},{"size":1223,"mtime":1607500089267,"results":"57","hashOfConfig":"32"},{"size":1067,"mtime":1607361231730,"results":"58","hashOfConfig":"32"},{"size":1484,"mtime":1607360127741,"results":"59","hashOfConfig":"32"},{"size":253,"mtime":1607326333542,"results":"60","hashOfConfig":"32"},{"size":779,"mtime":1607503198362,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"8209vj",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\index.js",[],["136","137"],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\reportWebVitals.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\App.js",["138","139"],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\store.js",["140","141","142"],"import {createStore , combineReducers , applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {postListReducer ,postDetailsReducer,postDeleteReducer,postCreateReducer,postUpdateReducer,postLikeReducer, addCommentReducer, deleteCommentReducer} from './reducers/postReducer'\r\nimport { userLoginReducer , userRegisterReducer, userDetailsReducer , userUpdateProfileReducer, userDeleteReducer, userListReducer, userUpdateReducer,userLoadReducer} from './reducers/userReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  getPosts : postListReducer,\r\n  getDetailPost : postDetailsReducer,\r\n  deletePost :postDeleteReducer,\r\n  postCreate: postCreateReducer,\r\n  postUpdate:postUpdateReducer,\r\n  likePost:postLikeReducer,\r\n   commentPost:addCommentReducer,\r\n   commentDeletePost:deleteCommentReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userLoaded : userLoadReducer\r\n  \r\n\r\n})\r\n\r\n\r\n  const userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n\r\n\r\nconst initialState = {\r\n \r\n    userLogin: {userInfo : userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer ,\r\n     initialState ,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Header.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\SinglePost.js",["143","144","145","146","147","148","149","150","151","152","153"],"import React,{useEffect,useState} from 'react'\r\nimport { Row, Col, Image, ListGroup, Card, Button,Form} from 'react-bootstrap'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport PostItem from './PostItem'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { PostDetails }  from '../actions/postAction'\r\nimport CommentForm from '../components/CommentForm'\r\nimport AllComments from '../components/AllComments'\r\n\r\nconst SinglePost = ({history,match}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const  getDetailPost = useSelector(state => state. getDetailPost)\r\n\r\n  const { loading, error, post} =  getDetailPost\r\n  \r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const commentPost = useSelector((state) => state.commentPost)\r\n  const { success:commentSuccess,error:commentError,loading:commentLoading } = commentPost\r\n  const commentDeletePost = useSelector((state) => state.commentDeletePost)\r\n  const { success:commentDeleteSuccess } = commentDeletePost\r\n\r\n\r\nuseEffect(() => {\r\n  if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n dispatch( PostDetails(match.params.id))\r\n\r\n  },[dispatch, match, commentSuccess,commentDeletePost])\r\n\r\nreturn (\r\n    <>\r\n    <Link className=\"btn btn-light my-3\" to=\"/\">\r\n    Back to Posts\r\n    </Link>\r\n   {loading ? (\r\n       <Loader />\r\n   ) : error ? (\r\n       <Message variant='danger'> {error} </Message>\r\n   ) : (\r\n<>\r\n<Row>\r\n<Col md={9}>\r\n<PostItem  post={post}/>\r\n<CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <AllComments key={comment._id} comment={comment} postId={post._id} commentId={comment._id} />\r\n        ))}\r\n      </div>\r\n  \r\n</Col>\r\n</Row>\r\n</>\r\n\r\n\r\n\r\n   )}\r\n\r\n\r\n\r\n    </>\r\n)\r\n\r\n\r\n\r\n}\r\n\r\nexport default SinglePost","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\HomeScreen.js",["154","155"],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\reducers\\postReducer.js",["156","157","158","159"],"import {\r\nPOST_LIST_REQUEST,\r\nPOST_LIST_SUCCESS,\r\nPOST_LIST_FAIL,\r\nPOST_LIST_RESET,\r\n POST_DETAILS_SUCCESS,\r\n POST_DETAILS_FAIL,\r\n POST_DETAILS_REQUEST,\r\n POST_DELETE_REQUEST,\r\n POST_DELETE_SUCCESS,\r\n POST_DELETE_FAIL,\r\n  POST_CREATE_SUCCESS,\r\n POST_CREATE_REQUEST,\r\n POST_CREATE_FAIL,\r\n POST_CREATE_RESET,\r\n POST_UPDATE_SUCCESS,\r\n POST_UPDATE_REQUEST,\r\n POST_UPDATE_FAIL,\r\n POST_UPDATE_RESET,\r\n POST_LIKE_REQUEST,\r\n POST_LIKE_SUCCESS,\r\n POST_LIKE_FAIL,\r\n POST_UNLIKE_REQUEST,\r\n POST_UNLIKE_SUCCESS,\r\n POST_UNLIKE_FAIL,\r\n ADD_COMMENT,\r\n ADD_COMMENT_REQUEST,\r\n ADD_COMMENT_FAIL,\r\n REMOVE_COMMENT,\r\n DELETE_COMMENT_FAIL,\r\n REMOVE_COMMENT_REQUEST\r\n} from '../constants/postConstants'\r\n\r\n\r\n  export const postListReducer = (state = { posts: [] }, action) => {\r\n    switch (action.type) {\r\n      case POST_LIST_REQUEST:\r\n        return { loading: true }\r\n      case POST_LIST_SUCCESS:\r\n        return { loading: false, posts: action.payload }\r\n      case POST_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case POST_LIST_RESET:\r\n        return { posts: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const postDetailsReducer =  (state = {post : { comments : [],likes:[]}}, action) => {\r\n    switch(action.type) {\r\n        case POST_DETAILS_REQUEST:\r\n            return { loading: true ,...state}\r\n        case POST_DETAILS_SUCCESS:\r\n            return { loading : false , post: action.payload}\r\n        case POST_DETAILS_FAIL:\r\n            return { loading : false , error:action.payload}   \r\n        default :\r\n            return state         \r\n    }\r\n}\r\n\r\nexport const postDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case POST_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case POST_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case POST_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n    export const postCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case POST_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case POST_CREATE_SUCCESS:\r\n        return { loading: false, success: true, post: action.payload }\r\n      case POST_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case POST_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const postUpdateReducer = (state = { post: {} }, action) => {\r\n    switch (action.type) {\r\n      case POST_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case POST_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, post: action.payload }\r\n      case POST_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case POST_UPDATE_RESET:\r\n        return { post: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const postLikeReducer = (state = {posts :{} } , action) => {\r\n    switch (action.type) {\r\n  \r\n        case POST_LIKE_SUCCESS:\r\n          return {\r\n            success : true,\r\n            posts: state.posts.map(post =>\r\n              post._id === action.payload.id ? { ...post, likes: action.payload.likes } : post\r\n            ),\r\n            loading: false\r\n          };\r\n      case POST_LIKE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n \r\n  \r\n  export const addCommentReducer = (state ={ posts: [], post:null, loading:true,success:false, error:{}}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case ADD_COMMENT_REQUEST:\r\n        return { loading : true }\r\n\r\n    case ADD_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: { ...state.post, comments: payload },\r\n          loading: false,\r\n          success: true\r\n        };\r\n     case ADD_COMMENT_FAIL:\r\n      return { loading: false, error: action.payload }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  export const deleteCommentReducer = (state ={ posts: [], post:null, loading:true,success:false, error:{}}, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case REMOVE_COMMENT_REQUEST :\r\n        return { loading : true}\r\n      case REMOVE_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: {\r\n            ...state.post,\r\n            comments: state.post.comments.filter(\r\n              comment => comment._id !== payload\r\n            )\r\n          },\r\n          loading: false,\r\n          success: true\r\n        };\r\n      case DELETE_COMMENT_FAIL :\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\AddPostScreen.js",["160","161","162","163","164","165","166","167"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createPost, addPost}  from '../actions/postAction'\r\n\r\nconst AddPostScreen = ({match,history}) => {\r\n\r\n  const dispatch = useDispatch()\r\n \r\n const [title, setTitle] = useState('');\r\n const [ description, setDescription] = useState('');\r\n const [image, setImage] = useState('')\r\n const [uploading, setUploading] = useState(false)\r\n\r\n\r\n  const postCreate= useSelector((state) => state.postCreate)\r\n  const {\r\n    loading: loading,\r\n    error: error,\r\n    success: success,post\r\n  } = postCreate\r\n  \r\n\r\n   useEffect(() => {\r\n    if (success) {\r\n    \r\n      history.push('/')\r\n    } \r\n  }, [dispatch, history, success]) \r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   const submitHandler = (e) => {\r\n    console.log(\"pppp\")\r\n    e.preventDefault()\r\n  \r\n\r\n    dispatch(createPost({title,description,image}))\r\n  }\r\n    return (\r\n    <>\r\n      <Link to='/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Add Post</h1>\r\n        \r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type='title'\r\n                placeholder='Enter Title'\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            \r\n            <Button type='submit' variant='primary'>\r\n              Create Post\r\n            </Button>\r\n          </Form>\r\n      \r\n      </FormContainer>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddPostScreen\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\reducers\\userReducer.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\ProfileScreen.js",["168","169","170","171","172","173"],"import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\nimport Mypost from '../components/Mypost'\r\n\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  \r\n const deletePost = useSelector((state) => state.deletePost)\r\n  const { loading:loadingDelete, error:errorDelete, success:successDelete } = deletePost\r\n\r\n  const postCreate= useSelector((state) => state.postCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,post\r\n  } = postCreate\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if ( !user || !user.name || success || successDelete   ) {\r\n       dispatch({ type : USER_UPDATE_PROFILE_RESET})\r\n       \r\n        dispatch(getUserDetails('profile'))\r\n     \r\n       \r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success,successDelete,successCreate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n  \r\n       \r\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        {successDelete && <Message variant='success'>Post Deleted</Message>}\r\n        <h2>My Posts {user.posts ? user.posts.length : '0 post'}  </h2>\r\n           {user.posts && user.posts.map((post) => (\r\n          <Mypost key={post._id} post={post} postId={post._id}  />\r\n   ))}\r\n    \r\n  \r\n   </Col>\r\n  </Row> \r\n  )\r\n}\r\n\r\nexport default ProfileScreen","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\FormContainer.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Message.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Loader.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Post.js",["174","175","176"],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\PostItem.js",["177","178","179","180"],"import React,{useEffect} from 'react'\r\nimport { Card ,Button} from 'react-bootstrap'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport { Link} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst PostItem = ({post}) => {\r\n  const dispatch = useDispatch()\r\n\r\nconst userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n    <Card className=\"my-3 p-3 rounded\" >\r\n         <Card.Body>\r\n              <Link to={`/user/${post.user}`}>\r\n                <Card.Header> posted by {post.name} </Card.Header>\r\n                </Link>\r\n             \r\n                  <Card.Title as=\"div\">\r\n                     <h3><strong> {post.title }</strong></h3> \r\n                  </Card.Title>\r\n                  <Card.Img variant=\"top\" src={post.image} />\r\n                  <Card.Text>\r\n                 {post.description}\r\n                 </Card.Text>\r\n                 <p> posted on {post.date} </p>\r\n\r\n   </Card.Body>\r\n\r\n      </Card>\r\n\r\n          \r\n      </>\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Mypost.js",["181","182","183","184"],"import React,{useEffect} from 'react'\r\nimport { Card ,Button} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link} from 'react-router-dom'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport { deleteMyPost } from '../actions/postAction'\r\n\r\nconst Mypost = ({post}) => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\n const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n const deletePost = useSelector((state) => state.deletePost)\r\n  const { loading, error, success } = deletePost\r\n\r\n\r\n\r\n const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n  dispatch(deleteMyPost(id)) \r\n    }\r\n  }\r\n    return (\r\n            <>\r\n     \r\n    <Card className=\"my-3 p-3 rounded\" >\r\n        \r\n            <Card.Body>\r\n            \r\n                <Card.Header>{userInfo.name} </Card.Header>\r\n       \r\n                \r\n                <Link to={`/post/${post._id}`}>\r\n                  <Card.Title as=\"div\">\r\n                      <strong> {post.title }</strong>\r\n                  </Card.Title>\r\n                 <Card.Img variant=\"top\" src={post.image} />\r\n                  </Link>\r\n                  <Card.Text>\r\n                 {post.description}\r\n                 </Card.Text>\r\n\r\n             \r\n\r\n           \r\n\r\n          </Card.Body>\r\n\r\n      </Card>\r\n        \r\n           <Button\r\n           onClick={() => deleteHandler(post._id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n           <i className='fas fa-trash' />\r\n           </Button>\r\n           <LinkContainer to={`/post/${post._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n           </LinkContainer>\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Mypost\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\actions\\postAction.js",["185","186"],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\actions\\userAction.js",["187"],"import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    \r\n    \r\n  } from '../constants/userConstants'\r\n\r\n  import axios from 'axios'\r\n  import setAuth from '../utils/setAuth'\r\n\r\n\r\n  export const loadUser = () => async dispatch => {\r\n    dispatch({type: 'USER_LOAD_REQUEST'})\r\n    if(localStorage.userInfo.token) {\r\n      setAuth(localStorage.userInfo.token) //if there is token put that token into global headers\r\n    }\r\n  \r\n  try {\r\n\r\n   \r\n    const res = await axios.get(`api/user`);\r\n  \r\n    dispatch({\r\n      type:'USER_LOADED',\r\n      payload:res.data\r\n    })\r\n  } catch (err) {\r\n    console.log('user err',err)\r\n    dispatch({\r\n      type: 'USER_LOAD_FAIL'\r\n    })\r\n    \r\n  }\r\n  \r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  export const login = (email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n      })\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/user/login',\r\n        { email, password },\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n     \r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n   \r\n    dispatch({ type : USER_LIST_RESET})\r\n  }\r\n\r\n\r\n  export const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n      })\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/user',\r\n        { name, email, password },\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  export const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DETAILS_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/user/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: USER_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  export const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/user/profile`, user, config)\r\n  \r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  export const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/user`, config)\r\n  \r\n      dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/user/${id}`, config)\r\n  \r\n      dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/user/${user._id}`, user, config)\r\n  \r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n  \r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\constants\\postConstants.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\constants\\userConstants.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\EditPostScreen.js",["188","189","190","191","192","193"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { updatePost,PostDetails }  from '../actions/postAction'\r\nimport { POST_UPDATE_RESET } from '../constants/postConstants'\r\n\r\nconst AddPostScreen = ({match,history}) => {\r\n\r\n    const postId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n \r\n const [title, setTitle] = useState('');\r\n const [ description, setDescription] = useState('');\r\n const [image, setImage] = useState('')\r\n const [uploading, setUploading] = useState(false)\r\n\r\n const  getDetailPost = useSelector((state) => state. getDetailPost )\r\n\r\n const {loading, error, post} =  getDetailPost\r\n\r\n  const postUpdate= useSelector((state) => state.postUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = postUpdate\r\n  \r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: POST_UPDATE_RESET })\r\n      history.push('/')\r\n    } else {\r\n      if ( post._id !== postId) {\r\n        dispatch(PostDetails(postId))\r\n      } else {\r\n        setTitle(post.title)\r\n       \r\n        setDescription(post.description)\r\n        setImage(post.Image)\r\n      }\r\n    }\r\n  }, [dispatch, history, postId, post, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n\r\n   const submitHandler = (e) => {\r\n    console.log(\"post updated\")\r\n    e.preventDefault()\r\n   dispatch(\r\n    updatePost(\r\n        {_id : postId, title,description,image}\r\n        \r\n        ))\r\n  }\r\n    return (\r\n    <>\r\n      <Link to='/profile' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Post</h1>\r\n        \r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type='title'\r\n                placeholder='Enter Title'\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update Post\r\n            </Button>\r\n          </Form>\r\n      \r\n      </FormContainer>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddPostScreen\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\screens\\UserProfile.js",["194","195","196","197","198","199","200"],"import React, { useState, useEffect } from 'react'\r\nimport {  Button, Row, Col} from 'react-bootstrap'\r\nimport Avatar from 'react-avatar';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUserDetails } from '../actions/userAction'\r\nimport Userpost from '../components/Userpost'\r\n\r\n\r\n\r\n\r\nconst UserProfile = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\n\r\n\r\n    \r\n  useEffect(() => {\r\n    dispatch(getUserDetails(userId))\r\n},[getUserDetails,userId]) \r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        \r\n        <h2>Profile</h2>\r\n        <Avatar name={user.name}  size={120} round=\"50%\"  />\r\n        <h3> {user.name} </h3>\r\n        <h5> Total Post : {user.posts ? user.posts.length : '0'} </h5>\r\n     \r\n      </Col>\r\n      <Col md={9}>\r\n          <h2> {user.name} Posts</h2>\r\n           {user.posts && user.posts.map((post) => (\r\n          <Userpost key={post._id} post={post}  />\r\n   ))}\r\n    \r\n  \r\n   </Col>\r\n  </Row> \r\n  )\r\n}\r\n\r\nexport default UserProfile","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\Userpost.js",["201","202","203","204","205","206","207"],"import React,{useEffect} from 'react'\r\nimport { Card ,Button} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link} from 'react-router-dom'\r\nimport { useDispatch , useSelector} from 'react-redux'\r\n\r\n\r\nconst Userpost = ({post}) => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst userLogin = useSelector((state) => state.userLogin)\r\nconst { userInfo } = userLogin\r\n\r\n  \r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n            <>\r\n     \r\n    <Card className=\"my-3 p-3 rounded\" >\r\n        \r\n            <Card.Body>\r\n            \r\n                <Card.Header>{user.name} </Card.Header>\r\n       \r\n             \r\n                <Link to={`/post/${post._id}`}>\r\n                  <Card.Title as=\"div\">\r\n                      <strong> {post.title }</strong>\r\n                  </Card.Title>\r\n                  </Link>\r\n                  <Card.Img variant=\"top\" src={post.image} />\r\n                  <Card.Text>\r\n                 {post.description}\r\n                 </Card.Text>\r\n      </Card.Body>\r\n\r\n      </Card>\r\n           \r\n          \r\n\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Userpost\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\CommentForm.js",["208"],"import React, { useState } from 'react';\r\nimport { Form, FormControl} from 'react-bootstrap'\r\nimport { addComments } from '../actions/postAction';\r\nimport { useDispatch } from 'react-redux'\r\nimport FormContainer from './FormContainer'\r\n\r\n\r\nconst CommentForm = ({postId}) => {\r\n\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch()\r\n\r\n    return (\r\n     <div className='post-form'>\r\n      \r\n        <h6> Comment  here....</h6>\r\n      \r\n      <Form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n         dispatch(addComments(postId,{text}));\r\n         console.log(text)\r\n          setText('');\r\n        }}\r\n      >\r\n        <FormControl\r\n          as='textarea'\r\n          name='text'\r\n          cols='30'\r\n          placeholder='comment here...'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </Form>\r\n  \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\AllComments.js",["209","210","211","212","213","214"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {  useDispatch , useSelector } from 'react-redux';\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\n\r\nimport {deleteMyComment } from '../actions/postAction';\r\n\r\nconst AllComments = ({  postId,\r\n    comment: { _id, text, name, pic, user, date }\r\n}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const commentPost = useSelector((state) => state.commentPost)\r\n    const { success,error,loading } = commentPost\r\n  \r\n     \r\n\r\n\r\n    return (\r\n      <>\r\n      \r\n        <div className='p-1 my-1'>\r\n        <div>\r\n          <Link to={`/user/${user}`}>\r\n          {/* <img  src={pic}  className=\"round-img\" width=\"50px\" height=\"50px\" /> */}\r\n            <h6>{name}</h6>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <p className='my-1'>{text}</p>\r\n          <p className='post-date'>\r\n            Posted on {date}\r\n          </p>\r\n       <div>\r\n       { user === userInfo._id && (\r\n            <button\r\n            onClick={() => dispatch(deleteMyComment(postId, _id))}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times' />\r\n            </button>\r\n          )}\r\n       </div>\r\n        </div>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default  AllComments\r\n","D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\utils\\setAuth.js",[],"D:\\New folder\\MERN_BLOG\\MY_BLOG\\MERN Blog -FPRT\\frontend\\src\\components\\SearchBox.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":15,"nodeType":"221","messageId":"222","endLine":1,"endColumn":24},{"ruleId":"219","severity":1,"message":"223","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":18},{"ruleId":"219","severity":1,"message":"224","line":5,"column":97,"nodeType":"221","messageId":"222","endLine":5,"endColumn":114},{"ruleId":"219","severity":1,"message":"225","line":5,"column":116,"nodeType":"221","messageId":"222","endLine":5,"endColumn":131},{"ruleId":"219","severity":1,"message":"226","line":5,"column":133,"nodeType":"221","messageId":"222","endLine":5,"endColumn":150},{"ruleId":"219","severity":1,"message":"227","line":1,"column":25,"nodeType":"221","messageId":"222","endLine":1,"endColumn":33},{"ruleId":"219","severity":1,"message":"228","line":2,"column":20,"nodeType":"221","messageId":"222","endLine":2,"endColumn":25},{"ruleId":"219","severity":1,"message":"229","line":2,"column":27,"nodeType":"221","messageId":"222","endLine":2,"endColumn":36},{"ruleId":"219","severity":1,"message":"230","line":2,"column":38,"nodeType":"221","messageId":"222","endLine":2,"endColumn":42},{"ruleId":"219","severity":1,"message":"231","line":2,"column":44,"nodeType":"221","messageId":"222","endLine":2,"endColumn":50},{"ruleId":"219","severity":1,"message":"232","line":2,"column":51,"nodeType":"221","messageId":"222","endLine":2,"endColumn":55},{"ruleId":"233","severity":1,"message":"234","line":15,"column":47,"nodeType":"235","messageId":"236","endLine":15,"endColumn":67,"fix":"237"},{"ruleId":"219","severity":1,"message":"238","line":23,"column":40,"nodeType":"221","messageId":"222","endLine":23,"endColumn":52},{"ruleId":"219","severity":1,"message":"239","line":23,"column":61,"nodeType":"221","messageId":"222","endLine":23,"endColumn":75},{"ruleId":"219","severity":1,"message":"240","line":25,"column":19,"nodeType":"221","messageId":"222","endLine":25,"endColumn":39},{"ruleId":"241","severity":1,"message":"242","line":34,"column":5,"nodeType":"243","endLine":34,"endColumn":56,"suggestions":"244"},{"ruleId":"233","severity":1,"message":"245","line":19,"column":41,"nodeType":"235","messageId":"236","endLine":19,"endColumn":56,"fix":"246"},{"ruleId":"241","severity":1,"message":"247","line":30,"column":3,"nodeType":"243","endLine":30,"endColumn":30,"suggestions":"248"},{"ruleId":"219","severity":1,"message":"249","line":20,"column":2,"nodeType":"221","messageId":"222","endLine":20,"endColumn":19},{"ruleId":"219","severity":1,"message":"250","line":23,"column":2,"nodeType":"221","messageId":"222","endLine":23,"endColumn":21},{"ruleId":"219","severity":1,"message":"251","line":24,"column":2,"nodeType":"221","messageId":"222","endLine":24,"endColumn":21},{"ruleId":"219","severity":1,"message":"252","line":25,"column":2,"nodeType":"221","messageId":"222","endLine":25,"endColumn":18},{"ruleId":"219","severity":1,"message":"253","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":15},{"ruleId":"219","severity":1,"message":"254","line":9,"column":22,"nodeType":"221","messageId":"222","endLine":9,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":23,"column":5,"nodeType":"257","messageId":"258","endLine":23,"endColumn":21,"fix":"259"},{"ruleId":"219","severity":1,"message":"260","line":23,"column":14,"nodeType":"221","messageId":"222","endLine":23,"endColumn":21},{"ruleId":"255","severity":1,"message":"261","line":24,"column":5,"nodeType":"257","messageId":"258","endLine":24,"endColumn":17,"fix":"262"},{"ruleId":"219","severity":1,"message":"263","line":24,"column":12,"nodeType":"221","messageId":"222","endLine":24,"endColumn":17},{"ruleId":"255","severity":1,"message":"264","line":25,"column":5,"nodeType":"257","messageId":"258","endLine":25,"endColumn":21,"fix":"265"},{"ruleId":"219","severity":1,"message":"266","line":25,"column":22,"nodeType":"221","messageId":"222","endLine":25,"endColumn":26},{"ruleId":"219","severity":1,"message":"267","line":2,"column":10,"nodeType":"221","messageId":"222","endLine":2,"endColumn":15},{"ruleId":"219","severity":1,"message":"268","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":23},{"ruleId":"219","severity":1,"message":"269","line":34,"column":19,"nodeType":"221","messageId":"222","endLine":34,"endColumn":32},{"ruleId":"219","severity":1,"message":"270","line":38,"column":14,"nodeType":"221","messageId":"222","endLine":38,"endColumn":27},{"ruleId":"219","severity":1,"message":"271","line":39,"column":12,"nodeType":"221","messageId":"222","endLine":39,"endColumn":23},{"ruleId":"219","severity":1,"message":"266","line":40,"column":28,"nodeType":"221","messageId":"222","endLine":40,"endColumn":32},{"ruleId":"219","severity":1,"message":"231","line":2,"column":15,"nodeType":"221","messageId":"222","endLine":2,"endColumn":21},{"ruleId":"219","severity":1,"message":"272","line":9,"column":7,"nodeType":"221","messageId":"222","endLine":9,"endColumn":15},{"ruleId":"219","severity":1,"message":"273","line":11,"column":11,"nodeType":"221","messageId":"222","endLine":11,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":1,"column":15,"nodeType":"221","messageId":"222","endLine":1,"endColumn":24},{"ruleId":"219","severity":1,"message":"231","line":2,"column":16,"nodeType":"221","messageId":"222","endLine":2,"endColumn":22},{"ruleId":"219","severity":1,"message":"272","line":10,"column":9,"nodeType":"221","messageId":"222","endLine":10,"endColumn":17},{"ruleId":"219","severity":1,"message":"273","line":13,"column":11,"nodeType":"221","messageId":"222","endLine":13,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":1,"column":15,"nodeType":"221","messageId":"222","endLine":1,"endColumn":24},{"ruleId":"219","severity":1,"message":"260","line":16,"column":11,"nodeType":"221","messageId":"222","endLine":16,"endColumn":18},{"ruleId":"219","severity":1,"message":"263","line":16,"column":20,"nodeType":"221","messageId":"222","endLine":16,"endColumn":25},{"ruleId":"219","severity":1,"message":"274","line":16,"column":27,"nodeType":"221","messageId":"222","endLine":16,"endColumn":34},{"ruleId":"219","severity":1,"message":"275","line":5,"column":1,"nodeType":"221","messageId":"222","endLine":5,"endColumn":16},{"ruleId":"219","severity":1,"message":"249","line":18,"column":2,"nodeType":"221","messageId":"222","endLine":18,"endColumn":19},{"ruleId":"219","severity":1,"message":"276","line":23,"column":5,"nodeType":"221","messageId":"222","endLine":23,"endColumn":22},{"ruleId":"219","severity":1,"message":"253","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":23,"column":48,"nodeType":"235","messageId":"236","endLine":23,"endColumn":68,"fix":"277"},{"ruleId":"219","severity":1,"message":"260","line":25,"column":9,"nodeType":"221","messageId":"222","endLine":25,"endColumn":16},{"ruleId":"219","severity":1,"message":"263","line":25,"column":18,"nodeType":"221","messageId":"222","endLine":25,"endColumn":23},{"ruleId":"219","severity":1,"message":"278","line":29,"column":14,"nodeType":"221","messageId":"222","endLine":29,"endColumn":27},{"ruleId":"219","severity":1,"message":"279","line":30,"column":12,"nodeType":"221","messageId":"222","endLine":30,"endColumn":23},{"ruleId":"219","severity":1,"message":"227","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"231","line":2,"column":11,"nodeType":"221","messageId":"222","endLine":2,"endColumn":17},{"ruleId":"219","severity":1,"message":"268","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":23},{"ruleId":"219","severity":1,"message":"260","line":21,"column":11,"nodeType":"221","messageId":"222","endLine":21,"endColumn":18},{"ruleId":"219","severity":1,"message":"263","line":21,"column":20,"nodeType":"221","messageId":"222","endLine":21,"endColumn":25},{"ruleId":"219","severity":1,"message":"273","line":25,"column":11,"nodeType":"221","messageId":"222","endLine":25,"endColumn":19},{"ruleId":"241","severity":1,"message":"280","line":33,"column":3,"nodeType":"243","endLine":33,"endColumn":26,"suggestions":"281"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":15,"nodeType":"221","messageId":"222","endLine":1,"endColumn":24},{"ruleId":"219","severity":1,"message":"231","line":2,"column":16,"nodeType":"221","messageId":"222","endLine":2,"endColumn":22},{"ruleId":"219","severity":1,"message":"268","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":23},{"ruleId":"219","severity":1,"message":"272","line":10,"column":7,"nodeType":"221","messageId":"222","endLine":10,"endColumn":15},{"ruleId":"219","severity":1,"message":"273","line":13,"column":9,"nodeType":"221","messageId":"222","endLine":13,"endColumn":17},{"ruleId":"219","severity":1,"message":"260","line":17,"column":11,"nodeType":"221","messageId":"222","endLine":17,"endColumn":18},{"ruleId":"219","severity":1,"message":"263","line":17,"column":20,"nodeType":"221","messageId":"222","endLine":17,"endColumn":25},{"ruleId":"219","severity":1,"message":"282","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":21},{"ruleId":"219","severity":1,"message":"283","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":17},{"ruleId":"219","severity":1,"message":"253","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":15},{"ruleId":"219","severity":1,"message":"284","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":14},{"ruleId":"219","severity":1,"message":"274","line":20,"column":13,"nodeType":"221","messageId":"222","endLine":20,"endColumn":20},{"ruleId":"219","severity":1,"message":"263","line":20,"column":21,"nodeType":"221","messageId":"222","endLine":20,"endColumn":26},{"ruleId":"219","severity":1,"message":"260","line":20,"column":27,"nodeType":"221","messageId":"222","endLine":20,"endColumn":34},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'userDeleteReducer' is defined but never used.","'userListReducer' is defined but never used.","'userUpdateReducer' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property getDetailPost.","MemberExpression","unexpectedWhitespace",{"range":"287","text":"288"},"'commentError' is assigned a value but never used.","'commentLoading' is assigned a value but never used.","'commentDeleteSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["289"],"Unexpected whitespace before property getPosts.",{"range":"290","text":"288"},"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["291"],"'POST_LIKE_REQUEST' is defined but never used.","'POST_UNLIKE_REQUEST' is defined but never used.","'POST_UNLIKE_SUCCESS' is defined but never used.","'POST_UNLIKE_FAIL' is defined but never used.","'Message' is defined but never used.","'addPost' is defined but never used.","no-useless-rename","Destructuring assignment loading unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"292","text":"293"},"'loading' is assigned a value but never used.","Destructuring assignment error unnecessarily renamed.",{"range":"294","text":"295"},"'error' is assigned a value but never used.","Destructuring assignment success unnecessarily renamed.",{"range":"296","text":"297"},"'post' is assigned a value but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'loadingDelete' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'success' is assigned a value but never used.","'POST_LIST_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.",{"range":"298","text":"288"},"'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'getUserDetails' aren't valid dependencies because mutating them doesn't re-render the component.",["299"],"'FormContainer' is defined but never used.","'PropTypes' is defined but never used.","'Loader' is defined but never used.","no-global-assign","no-unsafe-negation",[640,642],".",{"desc":"300","fix":"301"},[623,625],{"desc":"302","fix":"303"},[788,804],"loading",[811,823],"error",[830,846],"success",[867,869],{"desc":"304","fix":"305"},"Update the dependencies array to be: [dispatch, match, commentSuccess, commentDeletePost, userInfo, history]",{"range":"306","text":"307"},"Update the dependencies array to be: [dispatch, userInfo, keyword, history]",{"range":"308","text":"309"},"Update the dependencies array to be: [dispatch, userId]",{"range":"310","text":"311"},[1235,1286],"[dispatch, match, commentSuccess, commentDeletePost, userInfo, history]",[805,832],"[dispatch, userInfo, keyword, history]",[783,806],"[dispatch, userId]"]